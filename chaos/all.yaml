version: 1.0.0
title: What happens if we terminate an instance of the application?
description: If an instance of the application is terminated, a new instance should be created
tags:
- k8s
- pod
- deployment
configuration:
  ingress_host:
      type: env
      key: INGRESS_HOST
steady-state-hypothesis:
  title: The app is healthy
  probes:
  - name: The app responds to requests
    type: probe
    tolerance: 200
    provider:
      type: http
      timeout: 3
      verify_tls: false
      url: http://${ingress_host}/demo/person
      headers:
        Host: twflix-microservice.acme.com
method:
- type: action
  name: terminate-app-pod
  provider:
    type: python
    module: chaosk8s.pod.actions
    func: terminate_pods
    arguments:
      label_selector: app=twflix-microservice
      rand: true
      ns: twflix-microservice
  pauses:
    after: 2
steady-state-hypothesis:
  title: The app is healthy
  probes:
  - type: probe
    name: app-responds-to-requests
    tolerance: 200
    provider:
      type: http
      timeout: 10
      verify_tls: false
      url: http://${ingress_host}?addr=http://twflix-microservice
      headers:
        Host: twflix-ui.acme.com
  - type: probe
    tolerance: 200
    ref: app-responds-to-requests
  - type: probe
    tolerance: 200
    ref: app-responds-to-requests
  - type: probe
    tolerance: 200
    ref: app-responds-to-requests
  - type: probe
    tolerance: 200
    ref: app-responds-to-requests
method:
- type: action
  name: abort-failure
  provider:
    type: python
    module: chaosistio.fault.actions
    func: add_abort_fault
    arguments:
      virtual_service_name: twflix-microservice
      http_status: 500
      routes:
        - destination:
            host: twflix-microservice
            subset: primary
      percent: 50
      version: networking.istio.io/v1alpha3
      ns: twflix-microservice
- type: action
  name: delay
  provider:
    type: python
    module: chaosistio.fault.actions
    func: add_delay_fault
    arguments:
      virtual_service_name: twflix-microservice
      fixed_delay: 15s
      routes:
        - destination:
            host: twflix-microservice
            subset: primary
      percent: 50
      version: networking.istio.io/v1alpha3
      ns: twflix-microservice
  pauses:
    after: 1
rollbacks:
- type: action
  name: remove-abort-failure
  provider:
    type: python
    func: remove_abort_fault
    module: chaosistio.fault.actions
    arguments:
      virtual_service_name: twflix-microservice
      routes:
        - destination:
            host: twflix-microservice
            subset: primary
      version: networking.istio.io/v1alpha3
      ns: twflix-microservice
- type: action
  name: remove-delay
  provider:
    type: python
    func: remove_delay_fault
    module: chaosistio.fault.actions
    arguments:
      virtual_service_name: twflix-microservice
      routes:
        - destination:
            host: twflix-microservice
            subset: primary
      version: networking.istio.io/v1alpha3
      ns: twflix-microservice
