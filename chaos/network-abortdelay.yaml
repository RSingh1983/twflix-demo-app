version: 1.0.0
title: What happens if we abort and delay responses
description: If responses are aborted and delayed, the dependant application should retry and/or timeout requests
tags:
  - k8s
  - istio
  - http
configuration:
  ingress_host:
    type: env
    key: INGRESS_HOST
steady-state-hypothesis:
  title: The app is healthy
  probes:
    - type: probe
      name: app-responds-to-requests
      tolerance: 200
      provider:
        type: http
        timeout: 15
        verify_tls: false
        url: http://${ingress_host}?addr=http://twflix-microservice
        headers:
          Host: twflix-ui.acme.com
    - type: probe
      tolerance: 200
      ref: app-responds-to-requests
    - type: probe
      tolerance: 200
      ref: app-responds-to-requests
    - type: probe
      tolerance: 200
      ref: app-responds-to-requests
    - type: probe
      tolerance: 200
      ref: app-responds-to-requests
method:
  - type: action
    name: abort-failure
    provider:
      type: python
      module: chaosistio.fault.actions
      func: add_abort_fault
      arguments:
        virtual_service_name: twflix-microservice
        http_status: 500
        routes:
          - destination:
              host: twflix-microservice
              subset: primary
        percentage: 50
        version: networking.istio.io/v1alpha3
        ns: twflix-microservice
  - type: action
    name: delay
    provider:
      type: python
      module: chaosistio.fault.actions
      func: add_delay_fault
      arguments:
        virtual_service_name: twflix-microservice
        fixed_delay: 15s
        routes:
          - destination:
              host: twflix-microservice
              subset: primary
        percentage: 50
        version: networking.istio.io/v1alpha3
        ns: twflix-microservice
    pauses:
      after: 1
rollbacks:
  - type: action
    name: remove-abort-failure
    provider:
      type: python
      func: remove_abort_fault
      module: chaosistio.fault.actions
      arguments:
        virtual_service_name: twflix-microservice
        routes:
          - destination:
              host: twflix-microservice
              subset: primary
        version: networking.istio.io/v1alpha3
        ns: twflix-microservice
  - type: action
    name: remove-delay
    provider:
      type: python
      func: remove_delay_fault
      module: chaosistio.fault.actions
      arguments:
        virtual_service_name: twflix-microservice
        routes:
          - destination:
              host: twflix-microservice
              subset: primary
        version: networking.istio.io/v1alpha3
        ns: twflix-microservice
